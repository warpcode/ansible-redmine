---
- name: Gather OS Specific Variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "defaults.yml"

- name: Create redmine group
  group:
    name: "{{ redmine_path_group }}"
    state: present
  when: redmine_create_user_and_group
  become: yes

- name: create redmine user
  user:
    name: "{{ redmine_path_owner }}"
    shell: /bin/bash
    group: "{{ redmine_path_group }}"
    groups: "{{ redmine_path_group }}"
    state: present
  when: redmine_create_user_and_group
  become: yes

- name: fix redmine dir permissions
  file:
    dest: "{{ redmine_path }}"
    mode: 0770
    state: directory
    owner: "{{ redmine_path_owner }}"
    group: "{{ redmine_path_group }}"
    recurse: no
  become: yes

- name: Installing packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ redmine_packages }}"
  become: yes

- name: Ensure Bundler is installed
  gem:
    name: bundler
    state: present
    user_install: no
  become: yes

- name: Clone repository
  git:
    repo: "{{ redmine_git_url }}"
    dest: "{{ redmine_path }}"
    version: '{{ redmine_version }}'
    accept_hostkey: yes
  become: yes
  become_user: "{{ redmine_path_owner }}"

- name: Config database
  template:
    src: database.yml.j2
    dest: "{{ redmine_path }}/config/database.yml"
  become: yes
  become_user: "{{ redmine_path_owner }}"

- name: Install redmine gem dependencies
  bundler:
    state: present
    chdir: "{{ redmine_path }}"
    gem_path: vendor/bundle
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  become: yes
  become_user: "{{ redmine_path_owner }}"

- name: Check if secret token has been generated
  stat:
    path: "{{ redmine_path }}/config/initializers/secret_token.rb"
  register:
    secret_token_path

- name: Secret token
  command: bundle exec rake generate_secret_token
  args:
    chdir: "{{ redmine_path }}"
  environment:
    RAILS_ENV: production
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  become: yes
  become_user: "{{ redmine_path_owner }}"
  when: secret_token_path.stat.exists == False

- name: Database migrations
  command:
    bundle exec rake db:migrate
  args:
    chdir: "{{ redmine_path }}"
  environment:
    RAILS_ENV: production
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  become: yes
  become_user: "{{ redmine_path_owner }}"
